#!/bin/sh

# See very crude ref/def for a directory of files.
#
# Tricks:
# To see ref/def in a given file:
#   plxrefdef ./ | grep <file> | awk -F: '{ $1=""; print; }' | sort -n
#
# To see ref/def for a given proc (sorting could be funky):
#   plxrefdef ./ | grep <proc>
#

if [ $# -eq 0 ]; then
  printf "Syntax: %s [directory]+\n" "$0" >&2
  printf "%s\n" "where <directory> is the directory to search" >&2
  exit 4
fi
if [ $# -gt 1 ]; then
  printf "Only implemented one directory so far\n" >&2
  exit 4
fi

dir=$1
files="${dir}/*.plx ${dir}/*.plas"
ref=$(grep -i -n -E 'CALL[[:blank:]]+[[:alnum:]|_]+[[:blank:]]*;|ATTACH[[:blank:]]+EP=' ${files})
defstart=$(grep -i -n -E 'PROC[[:blank:]]*;|PROCEDURE[[:blank:]]*;|PROCEDURE[[:blank:]]*\(|PROC[[:blank:]]*\(|PROCEDURE[[:blank:]]*OPT|PROC[[:blank:]]*OPT' ${files})
defstart_noisy=$(grep -i -n -E '^[[:blank:]]*[[:alnum:]]+:' ${files} | grep -E -v '[[:blank:]]*[[:alnum:]]+:[[:blank:]]*GEN')
defend=$(grep -i -n -E 'END[[:blank:]]+[[:alnum:]|_]+;' ${files})
printf "%s\n" "${ref}"
printf "%s\n" "${defstart}"
printf "%s\n" "${defstart_noisy}"
printf "%s\n" "${defend}"
