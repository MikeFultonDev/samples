#!/bin/sh
#
# Create a new user with a 20G HOME file system, no TSO access, 
# and no password, specifying ssh public key to use from stdin
#
if [ $# -ne 1 ]; then
	echo "Syntax: crtuser <userid>" >&2
	echo "  where <userid> is an 7 character or less username" >&2
	echo "  and the ssh public key to be used is passed in via stdin" >&2
	exit 4
fi
id=$1

sshkey=''
while read line
do
	sshkey="${sshkey}${line}"
done

tsocmd "rlist facility bpx.next.user" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
	rdefout=`tsocmd "rdefine facility bpx.next.user appldata('1000/1000')" 2>/dev/null`
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "${rdefout}" >&2
		exit $rc
	fi
	tsocmd "setropts raclist(facility) refresh" 2>/dev/null
fi

tsocmd "listgrp zotgrp" >/dev/null 2>/dev/null 
if [ $? -gt 0 ]; then
	addout=`tsocmd "addgroup zotgrp supgroup(sys1) owner(sys1) omvs(autogid)" 2>/dev/null`
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "${addout}" >&2
		exit $rc
	fi
fi	

if ! [ -d "/u/${id}" ]; then

	set -x
	zfsadm define -aggregate "ZFS.${id}" -dataclas dceattr -storageclas scnosms -megabytes 15000 -volumes USERS
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Unable to allocate 15G file system for ZFS.${id} from volume USERS" >&2
		exit $rc
	fi

	mkdir /u/${id}
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Unable to make /u/${id} home directory" >&2
		exit $rc
	fi

	mount -tzfs -f "ZFS.${id}" "/u/${id}"
	rc=$?
	if [ $rc -gt 0 ]; then
		echo "Unable to mount /u/${id} from ZFS.${id}" >&2
		exit $rc
	fi
	chown "${id}.zotgrp" "/u/${id}"
fi
	
exit 4
	
addout=`tsocmd "adduser ${id} dfltgrp(zotgrp)" 2>/dev/null`
rc=$?
if [ $rc -gt 0 ]; then
	echo "${addout}" >&2
	exit $rc
fi
